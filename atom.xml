<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ubun222.github.io</id>
    <title>Cblog</title>
    <updated>2020-05-13T19:19:33.648Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ubun222.github.io"/>
    <link rel="self" href="https://ubun222.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://ubun222.github.io/images/avatar.png</logo>
    <icon>https://ubun222.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Cblog</rights>
    <entry>
        <title type="html"><![CDATA[黑果的2K屏幕开启HIDPI的正确姿势]]></title>
        <id>https://ubun222.github.io/post/2khidpi/</id>
        <link href="https://ubun222.github.io/post/2khidpi/">
        </link>
        <updated>2020-05-10T12:47:37.000Z</updated>
        <content type="html"><![CDATA[<p>  Mac OS X系统中，只有4K屏幕及以上才能开启HIDPI，2k屏幕在2k分辨率下 窗口图标字体显得十分小，看起来很不舒适。网上也有一些手动开启HIDPI的教程，其中最广为人知也最为简单的是GitHub xzhih大佬的one-key-hidpi 一行代码即可开启关闭hidpi。代码为bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi.sh)&quot;</p>
<p>  我在尝试了几次后，我的2K屏幕使用自定义分辨率为2208x1242获得了良好的体验。但仍存在一些问题，比如开机跑完代码后就会出现大苹果，在关闭啰嗦模式来提升使用体验时 苹果标志变大是我无法接受的。但我了解到手动添加缩放分辨率就不会有大苹果的问题，偶然我又得到了大佬的一键hidpi源码，于是我就萌生了一探究竟的想法。</p>
<p>（以下仅供参考）<br>
•经过我一而再再而三的检查代码，发现了一些有价值的信息：</p>
<p>•sudo mount -uw / &amp;&amp; killall Finder   一定要先执行否则无法粘贴覆盖系统文件（大佬的一部分代码都是在复制粘贴，可能一是因为无法编辑系统文件，二是直接复制粘贴更为简单粗暴）<br>
•ioreg -l | grep &quot;DisplayVendorID&quot;   提取显示器供应商ID<br>
•ioreg -l | grep &quot;DisplayProductID&quot;    提取显示器产品ID<br>
•ioreg -lw0 | grep -i &quot;IODisplayEDID&quot; | sed -e &quot;/[^&lt;]*&lt;/s///&quot; -e &quot;s/&gt;//&quot;  提取显示器EDID<br>
•hidpi=$(printf '%08x %08x' <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mo>(</mo></mrow><annotation encoding="application/x-tex">((</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span></span></span></span>{width}*2)) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mo>(</mo></mrow><annotation encoding="application/x-tex">((</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span></span></span></span>{height}*2)) | xxd -r -p | base64) 这行生成了系统将读取的文件内的有关分辨率的信息（分辨率乘以2似乎和HIDPI有关）<br>
假如我在终端提示中输入了2208x1242拿出来在bash单独运行就是<br>
•printf '%08x %08x' 4416 2484 | xxd -r -p | base64<br>
输出为：AAARQAAACbQ=<br>
•据说同时也需要一个 2208x1242<br>
printf '%08x %08x' 2208 1242 | xxd -r -p | base64<br>
输出为：AAAIoAAABNo=<br>
•将以上两个代码都分别加到 DisplayProductID-xx文件内容 scale-resolutions下方的两个data中间<br>
如：scale-resolutions<br>
array<br>
data<br>
AAARQAAACbQ=<br>
data<br>
data<br>
AAAIoAAABNo=<br>
data</p>
<p>这样就可以仅靠终端手动开启hidpi，并且不会有大苹果的问题。</p>
<p>  显示器文件信息如EDID，DisplayVendorID，DisplayProductID，文件夹及文件名称，甚至分辨率信息都可以用hackintool直接自动生成。（hackintool生成的EDID可能与终端生成的不一样，或许hackintool自动修补了原EDID)。</p>
<p>  也就是说仅靠hackintool生成的文件夹覆盖原文件夹即可添加分辨率。所以真正的教程在下面。。。</p>
<p>  至于hackintool如何生成显示器文件在hackintool帮助中有介绍：<br>
显示器EDID修补<br>
使用EDID修补你可以进行显示器型号的修改以及添加缩放选项。操作方法如下：<br>
1.从显示列表中选择你要编辑的显示器<br>
2.如果显示器的EDID没有分辨率范围或不好，有选择性地添加/修复分辨率范围<br>
3.单击“添加”按钮添加分辨率，再单击分辨率值进行编辑。选中某个分辨率值再点击“删除”按钮即可删除此分辨率。<br>
4.编辑完成后，点击“导出”按钮在桌面上生成修改好的补丁文件。<br>
安装<br>
安装EDID补丁有两种方法：安装显示器补丁文件，以及显示器驱动：<br>
安装显示器补丁文件：<br>
将生成的DisplayVendorID-x文件夹复制到/system/library/displays/contents/resources/overrides（对于El Capitan系统则是/system/library/displays/overrides ）<br>
将生成的icons.plist复制到/system/library/displays/contents/resources/overrides（对于El Capitan则是/system/library/displays/overrides）<br>
安装显示器驱动：<br>
将生成的DisplayEDID-x-x.kext复制到/library/extensions或efi/clover/kexts/other（取决于您的配置）<br>
注意：在复制文件之前，请先关闭系统完整性保护（SIP)</p>
<p>  如上是hackintool修补edid的教程，但也能增加缩放分辨率。如果hackintool生成的显示器文件夹覆盖后无效或者有问题，再可以仔细查看我记录的一些命令。两者（hackintool添加分辨率生成显示器文件夹覆盖和终端输出编码编辑加入显示器文件）亲测都有效，但是没有深入实验。有一些无法确定的点。。等着黑友们来继续研究。。。</p>
<p>  我只研究了一键hidpi代码，其他的任何手动打开hidpi教程我都不清楚，所以请看官们不喜勿喷。。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac如何安装homebrew]]></title>
        <id>https://ubun222.github.io/post/intallhomebrew/</id>
        <link href="https://ubun222.github.io/post/intallhomebrew/">
        </link>
        <updated>2020-05-07T14:50:11.000Z</updated>
        <content type="html"><![CDATA[<p>首先百度搜索homebrew，即可进入其官网<br>
官网是这么介绍的：<br>
使用 Homebrew 安装 Apple（或您的 Linux 系统）没有预装但 你需要的东西。<br>
完全基于 Git 和 Ruby，所以自由修改的同时你仍可以轻松撤销你的变更或与上游更新合并。<br>
使 macOS（或您的 Linux 系统）更完整。</p>
<p>安装仅需要在终端输入：<br>
/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;</p>
<p>但是终端提示：<br>
curl: (7) Failed to connect to 127.0.0.1 port 1086: Connection refused<br>
因为服务器在国外，所以无法直接下载安装。但是发现使用了科学上网工具终端也无法连接。<br>
百度后资料说明：<br>
在 Unix 终端，有三个和代理相关的环境变量，分别为 http_proxy, https_proxy 和all_proxy。粗略来说，http_proxy 和 https_proxy 分别用来设置 http 和 https连接的代理，all_proxy 设置所有连接的代理。<br>
虽然不明觉厉，但还好接下来有一段代码：export https_proxy=&quot;socks5://127.0.0.1:1087&quot;<br>
注意：1087为本地Socks5监听端口，不同软件是不同的。请在科学上网软件的高级设置内查看。</p>
<p>在输入这行代码后，再输入安装代码就可以了。</p>
<p>不仅安装homebrew需要设置终端代理，在git clone时，下载速度比较慢的时候，也可以使用。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何自制mac动态桌面]]></title>
        <id>https://ubun222.github.io/post/desktoppaper/</id>
        <link href="https://ubun222.github.io/post/desktoppaper/">
        </link>
        <updated>2020-05-07T13:56:54.000Z</updated>
        <content type="html"><![CDATA[<p>  有两种不同的动态桌面：一是像Catalina和Mojave随时间变化的壁纸，想实现随时间变化，也有两种方法。第二种动态桌面就是动态壁纸，可以像视频一样播放。</p>
<p>  这里我先介绍第一种随时间变化壁纸中最容易实现的方法，在 设置 中的 桌面与屏幕保护程序 项中左下点击 加号 ，添加指定的图片文件夹，在下方 更改图片 打勾即可。<br>
  还有另外一种较复杂也更像mac原生的动态桌面，它不只是定时换壁纸，用过最新的Mac os x系统，就会感觉到其壁纸变化的时间点非常合时宜，从Mac自带的动态桌面 .HEIF格式照片 破译的代码来看，在一系列的壁纸中(16张同一地点但不同光照的照片)，代码还记录了拍摄时的太阳高度角和方位角等等信息。通过系统设置所知的纬度信息和时间信息就可以计算出太阳高度角，即太阳光与地平面夹角，就可以实时在许多壁纸中选择光照最为接近的一张图片作为壁纸。那么该如何自己制作呢？<br>
  制作也有两种途径，可以在  动态壁纸俱乐部  https://dynamicwallpaper.club/create 网页中制作生成。还可以通过终端实现，在安装了Homebrew后，通过输入 brew tap mczachurski/wallpapper &amp;&amp; brew install wallpapper 代码安装wallpapper命令行工具。其使用教程在https://github.com/mczachurski/wallpapper/blob/master/README.md。<br>
  </p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一些Gridea编辑的小技巧]]></title>
        <id>https://ubun222.github.io/post/blankspace/</id>
        <link href="https://ubun222.github.io/post/blankspace/">
        </link>
        <updated>2020-05-05T12:33:34.000Z</updated>
        <content type="html"><![CDATA[<p>•HTML中的空格代码<br>
&amp; nbsp; <br>
不换行空格 按下space键产生的空格</p>
<p>&amp; ensp; <br>
它等同于字体度的一半</p>
<p>&amp; emsp; <br>
占据的宽度正好是1个中文宽度</p>
<p>&amp; thinsp; <br>
它是em之六分之一宽。</p>
<p>因为这个  Gridea  客户端app编辑的文章同步后，段落开头的空格全被过滤消失了，我首先是打算在GitHub网页中手动加上HTML代码来显示空格，但是只要本地客户端同步，GitHub网页上的HTML文件就被覆盖，所以只能在本地编辑文章时想办法显示空格，于是我索性直接将&amp; nbsp;输入到文章开头需要空格的地方，这个Gridea文本编辑器自动识别为HTML代码，于是问题就解决了。</p>
<p>但是想要打出中间不带空格的 &amp; emsp; 暂时没有想到方法，所以本篇在所有的HTML代码的&amp;后都有一个空格来防止在网页中变成显示空格</p>
<p>只是比较麻烦的解决了段落开头空格被忽略的问题</p>
<p>•输入 • 作为开头小圆点<br>
切换输入法为英文，按下option+8即可</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenCore的GUI插件]]></title>
        <id>https://ubun222.github.io/post/opencoregui/</id>
        <link href="https://ubun222.github.io/post/opencoregui/">
        </link>
        <updated>2020-05-05T11:53:17.000Z</updated>
        <content type="html"><![CDATA[<p>下载地址：https://github.com/n-d-k/NdkBootPicker/releases/tag/0.1.8<br>
用法介绍：https://github.com/n-d-k/NdkBootPicker/blob/0.1.8/README.md</p>
<p>以下为用法搬运：<br>
NdkBootPicker.efi需要位于EFI / OC / Drivers中并设置为在config.plist中加载*<br>
icon文件夹需要复制到EFI / OC /文件夹中。<br>
Config.plist设置Misc-&gt;Boot-&gt; PickerMode =External</p>
<p>要编译NdkBootPicker.efi，请在终端上运行“ ./ndk-macbuild.tool”（需要安装Xcode和Xcode命令行工具，并在编译之前打开xcode接受许可协议）。</p>
<p>Bios日期/时间，OpenCore版本可以通过空格键显示。<br>
屏幕快照可以使用F10拍摄。</p>
<p>在oc config.plist 中 PollAppleHotKeys 和 KeySupport 需要为YES以使用苹果原生快捷键。<br>
ShowPicker 为NO跳过倒计时<br>
PickerMode =External 以使用外部GUI<br>
并在启动参数删除-v<br>
来提升体验</p>
<p>苹果原生快捷键：<br>
cmd+v：启用-v跑码<br>
cmd+opt+p+r：重置NVRAM<br>
cmd+r：启动恢复分区<br>
cmd+s：启动至单用户模式<br>
option/alt：在ShowPicker设置成NO时显示引导项选择界面，ALT不可用时可用ESC代替<br>
cmd+c+-：关闭主板兼容性检查, 等同于添加引导标识符 -no_compat_check<br>
Shift: 安全模式</p>
<p>我需要在开机后马上开始不停按option/alt或者ESC来显示引导界面来检查这个GUI是否生效，并使用F10拍摄快照。<br>
以下为GUI效果<br>
<img src="https://ubun222.github.io/post-images/1588682315606.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于 这个博客是怎么来的]]></title>
        <id>https://ubun222.github.io/post/helloblog/</id>
        <link href="https://ubun222.github.io/post/helloblog/">
        </link>
        <updated>2020-05-02T13:48:57.000Z</updated>
        <content type="html"><![CDATA[<p>  今天是2020年5月2号周六，现在是晚上10点，我想简单介绍一下怎么就建立了这么一个博客网站，以及是怎么建立(白嫖)的，还有为什么要建立。<br>
  这不是我第一次建立博客网站，我在高中时稀里糊涂就建立了LAMP，除了mysql没有生效，无法使用ftp更改Wordpress主题等等问题以及忘记了功课以外，还是很成功的。但最主要是到现在除了有印象之外，一点经验也没有留下来，算不上可惜，不过吃一垫长一智，这次我终于有记录了。这也是我要写这个网站出生来龙去脉的原因之一。<br>
  我在组装了这台适合折腾黑苹果的主机后，大部分时间这台机子便投入到了研究事业中，并且在之中发现了一片新大陆，才发现原来的我见到的是皮毛中的皮毛。所以我很感谢OpenCore技术交流群里的众多基友，不仅解答了不少黑果的疑难杂症，在我能改善黑果的同时，也让我大开眼界，才了解到可以利用GitHub建立属于自己的博客。那么如何建立呢？？我不想再打一遍字，这里有一个有道云笔记的链接，我的教程（白嫖经验）全在里面了。<br>
http://note.youdao.com/noteshare?id=a47ad6998ff6686653a11c73fa722e61<br>
  还有为什么要建立呢？我也没有一个很准确的答案，就像你喜欢人家女孩子，为什么喜欢就追。这个只可意会不可言传。作为一个博客，我觉得，是建立个人形象和品牌的一个好机会，也是记录并分享技术的好平台，我没有什么拿的出手的技术，我也不喜欢整天钻研，所以注定这个博客不会是一个好博客，但是我可以在博客里记录一些千奇百怪，有趣好玩的东西，同时注入自己的情感，使网站更加可爱生动。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://ubun222.github.io/post/hello-gridea/</id>
        <link href="https://ubun222.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>